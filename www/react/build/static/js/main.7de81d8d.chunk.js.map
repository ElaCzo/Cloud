{"version":3,"sources":["Titre.js","Livres.js","Formulaire.js","FormulaireRegex.js","Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Titre","props","Card","Body","Title","Livres","titre","tabTitres","livresRes","map","livre","cle","title","num","console","log","includes","parseInt","Header","ListGroup","variant","Item","disabled","eventKey","Formulaire","submitQuery","event","preventDefault","books","sugg","fetch","proxyurl","state","value","then","res","json","result","setState","suggRes","this","error","target","Form","onSubmit","e","InputGroup","className","FormControl","placeholder","aria-label","aria-describedby","onChange","handleChange","autoComplete","Append","Button","type","Container","Row","Col","React","Component","FormulaireRegex","submitQueryRegex","Navigation","Tabs","defaultActiveKey","id","Tab","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7de81d8d.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport Card from 'react-bootstrap/Card'\n\nconst Titre = (props) => {\n\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title>Bibliothèque en ligne</Card.Title>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default Titre;","import ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\nimport React from 'react';\n\nconst Livres = (props) => {\n    let tabTitres = [];\n\n    tabTitres = props.livresRes.map(livre => {\n        let cle = livre.title + \"-\" + props.num;\n        console.log(cle);\n\n        if (livre.title.includes(\"/\") || livre.title.includes(\".txt\")) {\n            return [cle, \"Titre indisponible\"];\n        }\n        else {\n            return [cle, livre.title];\n        }\n    });\n\n    let titre;\n    if ((parseInt(props.num) % 2) === 1) {\n        titre = \"Résultats de la recherche\";\n    }\n    else {\n        titre = \"Suggestions\";\n    }\n\n    return (\n        <Card>\n            <Card.Header> {titre} </Card.Header>\n            <ListGroup variant=\"flush\">\n                {tabTitres.map(livre => {\n                    return (\n                        <ListGroup.Item disabled eventKey={livre[0]}>{livre[1]}</ListGroup.Item>\n                    )\n                })}\n            </ListGroup>\n        </Card>\n    );\n}\nexport default Livres;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport './App.css';\nimport Livres from './Livres.js';\n\nclass Formulaire extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            livresRes: [],\n            suggRes: [],\n            value: \"\",\n        };\n    }\n\n    handleChange(event) {\n        console.log(this.state.value);\n        this.setState({ value: event.target.value });\n    }\n\n    submitQuery = (event) => {\n        event.preventDefault();\n\n        let books = []\n        let sugg = []\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n        fetch(proxyurl + \"https://mysterious-oasis-90910.herokuapp.com/searchbooks?search=\" + this.state.value)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    books = result.books;\n                    sugg = result.sugg;\n\n                    this.setState({\n                        livresRes: books,\n                        suggRes: sugg\n                    }, function () {\n                        console.log(this.state.livresRes, \" App\");\n                        console.log(this.state.suggRes, \" App\");\n                    })\n                },\n\n                (error) => { }\n            )\n    }\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={(e) => this.submitQuery(e)}>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            placeholder=\"Rechercher\"\n                            aria-label=\"Rechercher\"\n                            aria-describedby=\"basic-addon2\"\n                            onChange={(e) => this.handleChange(e)}\n                            value={this.state.value}\n                            autoComplete=\"off\"\n                        />\n                        <InputGroup.Append>\n                            <Button variant=\"outline-secondary\" type=\"submit\">OK</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form>\n                <Container>\n                    <Row>\n                        <Col>\n                            {<Livres livresRes={this.state.livresRes} num='1' />}\n                        </Col>\n                        <Col>\n                            {<Livres livresRes={this.state.suggRes} num=\"2\" />}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Formulaire;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport './App.css';\nimport Livres from './Livres.js';\n\nclass FormulaireRegex extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            livresRes: [],\n            suggRes: [],\n            value: \"\",\n        };\n    }\n\n    handleChange(event) {\n        console.log(this.state.value);\n        this.setState({ value: event.target.value });\n    }\n\n    submitQueryRegex = (event) => {\n        event.preventDefault();\n\n        let books = []\n        let sugg = []\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n        fetch(proxyurl + \"https://mysterious-oasis-90910.herokuapp.com/searchbooksregex?search=\" + this.state.value)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    books = result.books;\n                    sugg = result.sugg;\n\n                    this.setState({\n                        livresRes: books,\n                        suggRes: sugg\n                    }, function () {\n                        console.log(this.state.livresRes, \" App\");\n                        console.log(this.state.suggRes, \" App\");\n                    })\n                },\n\n                (error) => { }\n            )\n    }\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={(e) => this.submitQueryRegex(e)}>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            placeholder=\"Rechercher\"\n                            aria-label=\"Rechercher\"\n                            aria-describedby=\"basic-addon2\"\n                            onChange={(e) => this.handleChange(e)}\n                            value={this.state.value}\n                            autoComplete=\"off\"\n                        />\n                        <InputGroup.Append>\n                            <Button variant=\"outline-secondary\" type=\"submit\">OK</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form>\n                <Container>\n                    <Row>\n                        <Col>\n                            {<Livres livresRes={this.state.livresRes} num='3' />}\n                        </Col>\n                        <Col>\n                            {<Livres livresRes={this.state.suggRes} num=\"4\" />}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default FormulaireRegex;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport './App.css';\nimport Formulaire from './Formulaire.js'\nimport FormulaireRegex from './FormulaireRegex.js'\n  \nconst Navigation = (props) => {\n    \n    return (\n        <Tabs defaultActiveKey=\"recherche\" id=\"uncontrolled-tab-example\">\n            <Tab eventKey=\"recherche\" title=\"Recherche par mots-clés\">\n                <Formulaire />\n            </Tab>\n            <Tab eventKey=\"regex\" title=\"Recherche par regex\">\n                <FormulaireRegex />\n            </Tab>\n        </Tabs>\n    );\n}\n\nexport default Navigation;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport './App.css';\nimport Titre from './Titre.js'\nimport Navigation from './Navigation.js'\n\nconst App = (props) => {\n\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col>\n              <Titre/>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Navigation/>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}